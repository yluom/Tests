import fr.ups.m2dl.sma.dm.system.network.ICom
import fr.ups.m2dl.sma.dm.system.network.IConflict
import fr.ups.m2dl.sma.dm.system.network.IConfigNetwork
import fr.ups.m2dl.sma.dm.system.process.ICycle
import fr.ups.m2dl.sma.dm.system.log.ILog
import fr.ups.m2dl.sma.dm.system.environment.IGlobalEnvironmentGet
import fr.ups.m2dl.sma.dm.system.environment.IGlobalEnvironmentSet
import fr.ups.m2dl.sma.dm.system.environment.ILocalEnvironmentGet
import fr.ups.m2dl.sma.dm.system.environment.ILocalEnvironmentSet
import fr.ups.m2dl.sma.dm.system.environment.IConfigEnvironment
import fr.ups.m2dl.sma.dm.system.environment.IPersist
import fr.ups.m2dl.sma.dm.system.process.IAction
import fr.ups.m2dl.sma.dm.system.configuration.IConfig
import fr.ups.m2dl.sma.dm.system.components.environment.EnvironmentRepresentation
import fr.ups.m2dl.sma.dm.system.agents.RobotsEcosystem
import fr.ups.m2dl.sma.dm.utils.Dispatcher2
import fr.ups.m2dl.sma.dm.system.components.log.Printer
import fr.ups.m2dl.sma.dm.utils.Dispatcher3
import fr.ups.m2dl.sma.dm.system.components.network.NetworkCycleManager
import fr.ups.m2dl.sma.dm.system.components.process.CycleManager
import fr.ups.m2dl.sma.dm.system.components.process.Controller
import fr.ups.m2dl.sma.dm.system.components.configuration.Configurator
import fr.ups.m2dl.sma.dm.system.agents.IConfigEcosystem

namespace fr.ups.m2dl.sma.dm.system.components.network {
	component Com {
		provides com : ICom
		provides config : IConfigNetwork
		requires conflictManager : IConflict
	}
	component ConflictManager {
		provides conflictManagement : IConflict
	}
	component NetworkCycleManager {
		provides com : ICom = communicator.com
		provides config : IConfigNetwork = communicator.config
		
		part conflictManager : ConflictManager
		part communicator : Com {
			bind conflictManager to conflictManager.conflictManagement
		}
	}
}

namespace fr.ups.m2dl.sma.dm.system.components.log {
	component Printer {
		provides cycle : ICycle
		requires logs : ILog
	}
}

namespace fr.ups.m2dl.sma.dm.system.components.configuration {
	component Configurator {
		requires envConfig : IConfigEnvironment
		requires networkConfig : IConfigNetwork
		requires agentConfig : IConfigEcosystem
		provides config : IConfig
	}
}

namespace fr.ups.m2dl.sma.dm.system.components.environment {
	component EnvironmentRepresentation {
		provides globalGet : IGlobalEnvironmentGet
		provides globalSet : IGlobalEnvironmentSet
		provides localGet : ILocalEnvironmentGet
		provides localSet : ILocalEnvironmentSet
		provides config : IConfigEnvironment
		provides log : ILog
		provides persist : IPersist
	}
}

namespace fr.ups.m2dl.sma.dm.system.components.process {
	component Controller {
		provides actions : IAction
		requires cycle : ICycle
	}
	
	component CycleManager {
		provides cycle : ICycle
		requires doCyle : ICycle
		requires com : ICom
		requires envGet : IGlobalEnvironmentGet
		requires envSet : IGlobalEnvironmentSet
	}
}

namespace fr.ups.m2dl.sma.dm.system.components.system {
	component System {
		requires externCycle : ICycle
		provides actions : IAction = controller.actions
		provides environmentGet : IGlobalEnvironmentGet = environment.globalGet
		provides config : IConfig = configurator.config
		
		part networkManager : NetworkCycleManager
		part environment : EnvironmentRepresentation
		part ecox : RobotsEcosystem {
			bind envLocalGet to environment.localGet
			bind envLocalSet to environment.localSet
		}
		part logDispatcher : Dispatcher2[ILog] {
			bind to1 to environment.log
			bind to2 to ecox.log
		}
		part printer : Printer {
			bind logs to logDispatcher.from
		}
		part cycleDispatcher : Dispatcher3[ICycle] {
			bind to1 to ecox.cycle
			bind to2 to printer.cycle
			bind to3 to externCycle
		}
		part cycleManager : CycleManager {
			bind com to networkManager.com
			bind doCyle to cycleDispatcher.from
			bind envGet to environment.globalGet
			bind envSet to environment.globalSet
		}
		part controller : Controller {
			bind cycle to cycleManager.cycle
		}
		part configurator : Configurator {
			bind networkConfig to networkManager.config
			bind envConfig to environment.config
			bind agentConfig to ecox.config
		}
	}
}

